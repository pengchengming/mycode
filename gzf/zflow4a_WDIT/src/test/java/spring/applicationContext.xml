<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd         
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd         
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd         
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<context:property-placeholder
		location="classpath*:META-INF/spring/*.properties,classpath*:META-INF/*.properties" />

	<context:spring-configured />

	<context:component-scan base-package="com.bizduo.zflow">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>



<!-- 	<bean id="springHelper" class="org.jbpm.pvm.internal.processengine.SpringHelper"> -->
<!--        <property name="jbpmCfg" value="META-INF/spring/spring-jbpm4.xml" /> -->
<!--     </bean> -->
<!-- 	<bean id="processEngine" factory-bean="springHelper"  factory-method="createProcessEngine" />  -->
<!-- 	<bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" /> -->
<!-- 	<bean id="executionService" factory-bean="processEngine" factory-method="getExecutionService" /> -->
<!-- 	<bean id="taskService" factory-bean="processEngine" factory-method="getTaskService" /> -->
<!-- 	<bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" /> -->
<!-- 	<bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService" /> -->
<!-- 	<bean id="managementService" factory-bean="processEngine" factory-method="getManagementService" />  -->

<!-- 	<bean id="dataSource" class="org.apache.tomcat.dbcp.dbcp.BasicDataSource" -->
<!-- 		destroy-method="close"> -->
<!-- 		<property name="driverClassName" value="${dbcp.driverClassName}" /> -->
<!-- 		<property name="url" value="${dbcp.url}" /> -->
<!-- 		<property name="username" value="${dbcp.username}" /> -->
<!-- 		<property name="password" value="${dbcp.password}" /> -->
<!-- 		<property name="testOnBorrow" value="true" /> -->
<!-- 		<property name="testOnReturn" value="true" /> -->
<!-- 		<property name="testWhileIdle" value="true" /> -->
<!-- 		<property name="timeBetweenEvictionRunsMillis" value="1800000" /> -->
<!-- 		<property name="numTestsPerEvictionRun" value="3" /> -->
<!-- 		<property name="minEvictableIdleTimeMillis" value="1800000" /> -->
<!-- 		<property name="validationQuery" value="SELECT 1 FROM global_user" /> -->
<!-- 	</bean> -->
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">  
	    <property name="driverClass" value="${c3p0.driverClass}" />  
	    <property name="jdbcUrl" value="${c3p0.jdbcUrl}" />  
	    <property name="user" value="${c3p0.user}" />  
	    <property name="password" value="${c3p0.password}" />  
	    <property name="autoCommitOnClose" value="false" />  
	    <property name="checkoutTimeout" value="${c3p0.checkoutTimeout}" />  
	    <property name="initialPoolSize" value="${c3p0.minPoolSize}" />  
	    <property name="minPoolSize" value="${c3p0.minPoolSize}" />  
	    <property name="maxPoolSize" value="${c3p0.maxPoolSize}" />  
	    <property name="maxIdleTime" value="${c3p0.maxIdleTime}" />  
	    <property name="acquireIncrement" value="${c3p0.acquireIncrement}" />  
	</bean>

	<!-- JdbcTemplate使用动态数据源的配置 -->  
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  
	    <property name="dataSource" ref="dynamicDataSource" />  
	</bean>
	<bean name="dynamicDataSource" class="com.bizduo.zflow.util.crm.DynamicDataSource">
		<property name="targetDataSources">
			<map>
				<entry value-ref="dataSource" key="dataSource" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSource" />
	</bean>
	
	<!-- sessionFactory配置 -->
	<bean id="sessionFactory"
	class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=${hibernate.dialect}
				hibernate.query.substitutions=${hibernate.query.substitutions}
				hibernate.cache.provider_class=${hibernate.cache.provider_class}
				hibernate.format_sql=${hibernate.format_sql}
				hibernate.use_sql_comments=${hibernate.use_sql_comments}
				<!-- hibernate.show_sql=${hibernate.show_sql} -->
				<!-- 设置自动创建|更新|验证数据库表结构 -->
				hibernate.hbm2ddl.auto=${hibernate.hbm2ddl.auto}
			</value>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.bizduo.zflow.*</value>
			</list>
		</property>
<!-- 		<property name="mappingLocations"> -->
<!-- 			<list> -->
<!-- 		        <value>classpath:jbpm.execution.hbm.xml</value> -->
<!-- 		        <value>classpath:jbpm.history.hbm.xml</value> -->
<!-- 		        <value>classpath:jbpm.identity.hbm.xml</value> -->
<!-- 				<value>classpath:jbpm.repository.hbm.xml</value> -->
<!-- 				<value>classpath:jbpm.task.hbm.xml</value> -->
<!-- 			</list> -->
<!-- 		</property> -->
	</bean>

	<bean id="queryDao" class="com.bizduo.common.module.dao.impl.hibernate.QueryDaoHibernate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

 	<bean id="passwordEncoder1" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" /> 
 	
	<bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder" />
	<!-- SpringSecurity -->
	<bean class="org.springframework.security.access.vote.RoleVoter" id="roleVoter"/>
	<bean class="org.springframework.security.access.vote.AuthenticatedVoter" id="authenticatedVoter"/>
	<bean class="org.springframework.security.access.vote.UnanimousBased" id="unanimousBased">
		<property name="decisionVoters">
			<list>
				<ref bean="roleVoter"/>
				<ref bean="authenticatedVoter"/>
			</list>
		</property>
	</bean>
	
	<bean id="menuItemFilter" class="com.bizduo.zflow.filter.MenuItemFilter" />
	
	<!-- <tx:annotation-driven mode="aspectj" transaction-manager="transactionManager"/> -->

	<!-- <bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" 
		id="entityManagerFactory"> -->
	<!-- <property name="persistenceUnitName" value="persisterceUnit"/> -->
	<!-- <property name="dataSource" ref="dataSource"/> -->
	<!-- </bean> -->

	<!-- <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> -->
	<!-- <property name="dataSource" ref="dataSource"/> -->
	<!-- <property name="configLocation" value="classpath:mybatis-config.xml"/> -->
	<!-- <property name="mapperLocations"> -->
	<!-- <list> -->
	<!-- <value>classpath:mappers/*Mapper.xml</value> -->
	<!-- </list> -->
	<!-- </property> -->
	<!-- </bean> -->

	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> -->
	<!-- <property name="basePackage" value="com.bizduo.zflow.controller.mapper" 
		/> -->
	<!-- <property name="sqlSessionFactory" ref="sqlSessionFactory"/> -->
	<!-- </bean> -->

	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>


<!-- 	<bean name="transactionManager" -->
<!-- 		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> -->
<!-- 		<property name="dataSource" ref="dataSource" /> -->
<!-- 	</bean> -->
<!--  -->

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="create*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="addLog" propagation="REQUIRES_NEW" rollback-for="Exception" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="modify*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="*deploy*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="start*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="complete*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="audit*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="getIdentity*" propagation="REQUIRED" rollback-for="Exception" /> 
			<tx:method name="login*" propagation="REQUIRED" rollback-for="com.bizduo.zflow.controller.exception.LoginException" />
			<tx:method name="*" read-only="false" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="allServiceMethod"
			expression="execution(* com.bizduo.*.service.*.*.*(..))" />
		<aop:advisor pointcut-ref="allServiceMethod" advice-ref="txAdvice" />
	</aop:config>
</beans>

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd">
	<!--定义多个任务信息 -->  
	
<!--    "0 10,44 14 ? 3 WED" 每年三月的星期三的下午2:10和2:44触发  -->
<!--    		<property name="cronExpression" value="0 10 20 ? * SUN" /> -->
    <!-- 4、配置调度器 ，容器启动就会执行调度程序  -->  
     <!-- 总管理类，如果lazy-init='false',则容器启动时就会执行调度程序-->    
     <!-- 如果lazy-init='true',则需要实例化该bean才能执行调度程序            -->    
    <bean id="schdulerFactory" lazy-init="false" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
        <property name="triggers">  
            <list>  
<!--             	<ref bean="testCronTrigger"/>  -->
<!-- 				<ref bean="smsCronTrigger"/> -->
 				
            </list>  
        </property>  
    </bean>
    	
    <!--1、 配置文件中添加业务类，该类为调用的工作类 -->  

    
<!--       盘任务处理 -->
    <bean id="panTasks" class="com.bizduo.zflow.quartz.PanTasks">
<!--     	<property name="backupPath" value="${backup.root.path}"/> -->
    </bean>    
    
    <!-- 2、定义任务，在spring文件中配置代理类 ，定义调用对象和调用对象的方法-->   
    <bean id="panTasksJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">    
		<!-- 调用的类     -->
        <property name="targetObject" ref="panTasks"/>
        <!-- 调用类中的方法   -->
        <property name="targetMethod" value="checkObjects"/>   
		<!-- false,证明不执行并发任务   -->
        <property name="concurrent" value="false"/>     
    </bean>
    
    <!-- 3、配置触发器，定义触发时间，可以根据不同的时间对同一个任务定义多个触发器，下面是每隔5秒调用一个方法配置-->  
    <!-- cron表达式 每分钟执行1次-->  
    <bean id="panCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">  
        <property name="jobDetail" ref="panTasksJob"/>  
        <property name="cronExpression" value="0 0 1 * * ?"/>
<!--         <property name="cronExpression" value="0 0/1 * * * ?"/> -->
<!--         <property name="cronExpression" value="0 0/20 6-18 * * ?"/>   -->
    </bean>
        	
    	
	
    <!--1、 配置文件中添加业务类，该类为调用的工作类 -->  
    <bean id="timingBusiness" class="com.bizduo.zflow.quartz.TimingBusiness">
<!--     	<property name="backupPath" value="${backup.root.path}"/> -->
    </bean>    
<!--       邮件发送 -->
    <!-- 2、定义任务，在spring文件中配置代理类 ，定义调用对象和调用对象的方法-->   
    <bean id="mailSend" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">    
		<!-- 调用的类     -->
        <property name="targetObject" ref="timingBusiness"/>  
		<!-- 调用类中的方法   -->
        <property name="targetMethod" value="mailSend"/>   
		<!-- false,证明不执行并发任务   -->
        <property name="concurrent" value="false"/>     
    </bean>
    
    <bean id="smsSend" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">    
		<!-- 调用的类     -->
        <property name="targetObject" ref="timingBusiness"/>  
		<!-- 调用类中的方法   -->
        <property name="targetMethod" value="smsSend"/>   
		<!-- false,证明不执行并发任务   -->
        <property name="concurrent" value="false"/>     
    </bean>    
    
    <!-- 3、配置触发器，定义触发时间，可以根据不同的时间对同一个任务定义多个触发器，下面是每隔5秒调用一个方法配置-->  
    <!-- cron表达式 -->  
    <bean id="mailCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">  
        <property name="jobDetail" ref="mailSend"/>  
        <property name="cronExpression" value="0/10 * * * * ?"/>
<!--         <property name="cronExpression" value="0 0/20 6-18 * * ?"/>   -->
    </bean>
    
    <bean id="smsCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">  
        <property name="jobDetail" ref="smsSend"/>  
        <property name="cronExpression" value="0/10 * * * * ?"/>
<!--         <property name="cronExpression" value="0 0/20 6-18 * * ?"/>   -->
    </bean>
    


<!--     两天一次提醒 -->
     <!-- 2、定义任务，在spring文件中配置代理类 ，定义调用对象和调用对象的方法-->   
    <bean id="remindSend" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">    
		<!-- 调用的类     -->
        <property name="targetObject" ref="timingBusiness"/>  
		<!-- 调用类中的方法   -->
        <property name="targetMethod" value="remindSend"/>   
		<!-- false,证明不执行并发任务   -->
        <property name="concurrent" value="false"/>     
    </bean>
    
     <!-- 3、配置触发器，定义触发时间，可以根据不同的时间对同一个任务定义多个触发器，下面是每隔5秒调用一个方法配置-->  
    <!-- cron表达式 -->  
    <bean id="remindCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">  
        <property name="jobDetail" ref="remindSend"/>  
<!--         <property name="cronExpression" value="0 0 10 * * ?"/>    每天10点-->
<!-- 6-18点，每五分钟执行一次  -->

<!--         <property name="cronExpression" value="0/8 * * * * ?"/> -->
        <property name="cronExpression" value="0 0/30 6-18 * * ?"/>  

<!--         <property name="cronExpression" value="0/40 * * * * ?"/> -->
    </bean>  
</beans>
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd">
	<!--定义多个任务信息 -->  
	
<!--    "0 10,44 14 ? 3 WED" 每年三月的星期三的下午2:10和2:44触发  -->
<!--    		<property name="cronExpression" value="0 10 20 ? * SUN" /> -->
    <!-- 4、配置调度器 ，容器启动就会执行调度程序  -->  
     <!-- 总管理类，如果lazy-init='false',则容器启动时就会执行调度程序-->    
     <!-- 如果lazy-init='true',则需要实例化该bean才能执行调度程序            -->    
    <bean id="schdulerFactory" lazy-init="false" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
        <property name="triggers">  
            <list>   
					<!--  <ref bean="generate_Req_PT_andSaveTrigger"/> --> 			<!-- 外网定期生成申请和预审的json并保存到外网info -->					
					<!-- <ref bean="createHousingMangementJsonTrigger"/> --> 		<!-- 外网生成房产局资质审核和现场审核的数据保存到外网 -->
										
					<!-- <ref bean="cogradientHousingMangementJsonTrigger" />  -->	<!-- 内网同步外网资质审核以及现场审核的Trigger -->
					
					<!-- <ref bean="cogradientIntranetJsonTrigger"/>	 -->			<!-- 将原本保存在内网中的数据同步到外网的Trigger --> 
					<!-- <ref bean="autoCogradientTrigger" />	 -->				<!-- 内网定期向外网拿申请和预审的json并保存到内网 -->
<!-- 					<ref bean="extranet_generateJson" />	 -->
					<!-- 外网生成数据 -->
<!--  					<ref bean="intranet_cogradientExtranetJson"/> -->
<!-- 内网发送请求获取外网数据并同步到内网 -->  
<!-- 					<ref bean="intranet_cogradient"/>		 -->
<!-- 					内网生成且推送 -->
				<!-- zpz -->


            </list>  
        </property>  
    </bean>
	
	
	<!-- 创建被调用的工作类 -->
	
	<!--  <bean id="innerDataQuartz" class="com.bizduo.zflow.quartz.InnerDataQuartz"></bean>
     <bean id="pretrialDataQuartz" class="com.bizduo.zflow.quartz.PretrialDataQuartz"></bean>
     <bean id="requestAndPretrialQuartz" class="com.bizduo.zflow.quartz.RequestAndPretrialQuartz"></bean>
	 <bean id="housingManagementQuartz" class="com.bizduo.zflow.quartz.HousingManagementQuartz"></bean> -->
	 <bean id="intranetQuartz" class="com.bizduo.zflow.quartz.IntranetQuartz"></bean>
	 <bean id="extranetQuartz" class="com.bizduo.zflow.quartz.ExtranetQuartz"></bean>
	<!-- 定义工作类中的任务 -->
	
	
	<!-- 外网生成的任务 -->
	
	<bean id="generateExtranetJsonTask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<!-- 调用的类     -->
        <property name="targetObject" ref="extranetQuartz"/>  
		<!-- 调用类中的方法   -->
        <property name="targetMethod" value="generateJson"/>   
		<!-- false,证明不执行并发任务   -->
        <property name="concurrent" value="false"/>     
	</bean>
	
	<!-- 内网生成且推送的任务 -->
	<bean id="cogradientIntranetTask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<!-- 调用的类     -->
        <property name="targetObject" ref="intranetQuartz"/>  
		<!-- 调用类中的方法   -->
        <property name="targetMethod" value="cogradient"/>   
		<!-- false,证明不执行并发任务   -->
        <property name="concurrent" value="false"/>     
	</bean>
	
	<!-- 内网发送获取外网数据的任务 -->
	<bean id="cogradientExtranetJsonTask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<!-- 调用的类     -->
        <property name="targetObject" ref="intranetQuartz"/>  
		<!-- 调用类中的方法   -->
        <property name="targetMethod" value="cogradientExtranetJson"/>   
		<!-- false,证明不执行并发任务   -->
        <property name="concurrent" value="false"/>     
	</bean>
	
	<!-- 配置触发器,触发时间    下面是每隔5秒调用一个方法配置  -->
	
	
    
    <!-- 外网生成Json的Trigger -->
   
    <bean id="extranet_generateJson" class="org.springframework.scheduling.quartz.CronTriggerBean">  
        <property name="jobDetail" ref="generateExtranetJsonTask"/>  
        <property name="cronExpression" value=" 0 0/1 * * * ?"/> 
    </bean>	
    
    <!-- 内网生成切推送的Trigger -->
    
    <bean id="intranet_cogradient" class="org.springframework.scheduling.quartz.CronTriggerBean">  
        <property name="jobDetail" ref="cogradientIntranetTask"/>  
        <property name="cronExpression" value="0 0/1 * * * ?"/> 
    </bean>	
    <!-- 内网发送获取外网数据的Trigger -->
    <bean id="intranet_cogradientExtranetJson" class="org.springframework.scheduling.quartz.CronTriggerBean">  
        <property name="jobDetail" ref="cogradientExtranetJsonTask"/>  
        <property name="cronExpression" value="0 0/1 * * * ?"/> 
    </bean>	
    <!--1、 配置文件中添加业务类，该类为调用的工作类 -->  
 <!--    <bean id="timingBusiness" class="com.bizduo.zflow.quartz.OneMinuteQuartz">
    	<property name="backupPath" value="${backup.root.path}"/>
    </bean>    
    2、定义任务，在spring文件中配置代理类 ，定义调用对象和调用对象的方法   
    <bean id="OneMinute" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">    
		调用的类    
        <property name="targetObject" ref="timingBusiness"/>  
		调用类中的方法  
        <property name="targetMethod" value="oneMinuteMethod"/>   
		false,证明不执行并发任务  
        <property name="concurrent" value="false"/>     
    </bean>
    
    3、配置触发器，定义触发时间，可以根据不同的时间对同一个任务定义多个触发器，下面是每隔5秒调用一个方法配置  
    cron表达式  
    <bean id="testCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">  
        <property name="jobDetail" ref="OneMinute"/>  
        <property name="cronExpression" value="0 0/1 * * * ?"/> 
    </bean> -->
<!-- ===================读取同步文件===============================================================     -->
    <!--1、 配置文件中添加业务类，该类为调用的工作类 -->  
<!--     <bean id="readSynBusiness" class="com.bizduo.zflow.quartz.OneMinuteQuartz"> -->
<!--     	<property name="backupPath" value="${backup.root.path}"/> -->
<!--     </bean>     -->
    <!-- 2、定义任务，在spring文件中配置代理类 ，定义调用对象和调用对象的方法-->   
   <!--  <bean id="readOneMinute" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">    
		调用的类    
        <property name="targetObject" ref="timingBusiness"/>  
		调用类中的方法  
        <property name="targetMethod" value="readOneMinuteMethod"/>   
		false,证明不执行并发任务  
        <property name="concurrent" value="false"/>     
    </bean>
    
    3、配置触发器，定义触发时间，可以根据不同的时间对同一个任务定义多个触发器，下面是每隔5秒调用一个方法配置  
    cron表达式  
    <bean id="readOneCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">  
        <property name="jobDetail" ref="readOneMinute"/>  
        <property name="cronExpression" value="0 0/1 * * * ?"/> 
    </bean> -->
    <!-- ===================读取同步文件===============================================================     -->
  
</beans>
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd         
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd         
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd         
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<context:property-placeholder location="classpath*:resource/*.properties" />
	<!-- enable autowire -->
	<context:annotation-config />
	<context:component-scan base-package="cn.pcm.service"></context:component-scan>
	<context:component-scan base-package="cn.pcm.dao"></context:component-scan>
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat" />
	</bean>

	<!-- sessionFactory配置 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=${hibernate.dialect}
				hibernate.query.substitutions=${hibernate.query.substitutions}
				hibernate.cache.provider_class=${hibernate.cache.provider_class}
				hibernate.format_sql=${hibernate.format_sql}
				hibernate.use_sql_comments=${hibernate.use_sql_comments}
				hibernate.show_sql=${hibernate.show_sql}
				<!-- 设置自动创建|更新|验证数据库表结构 -->
				hibernate.hbm2ddl.auto=${hibernate.hbm2ddl.auto}

			</value>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>cn.pcm.domain.User</value>
				<value>cn.pcm.domain.ArticleContent</value>
				<value>cn.pcm.domain.Replay</value>
				<value>cn.pcm.domain.ArticleDetail</value>
				<value>cn.pcm.domain.Resource</value>
			</list>
		</property>
		<property name="packagesToScan">
			<list>
				<value>cn.pcm.domain </value>
			</list>
		</property>
	</bean>


	<!-- transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager1" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<qualifier value="isap" />
	</bean>

	<!-- 全注解方式 需加上@Transactional -->
	<tx:annotation-driven transaction-manager="transactionManager1" />

	<!-- 配置Spring声明式事务 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="create*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="addLog" propagation="REQUIRES_NEW" rollback-for="Exception" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="modify*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="*deploy*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="start*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="complete*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="audit*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="getIdentity*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="login*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="*" read-only="false" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="allServiceMethod" expression="execution(* cn.pcm.service.*.*(..))" />
		<aop:advisor pointcut-ref="allServiceMethod" advice-ref="txAdvice" />
	</aop:config>


</beans>
